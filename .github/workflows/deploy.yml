name: Deploy Laravel + React to Shared Hosting

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: üß¨ Checkout Repository
        uses: actions/checkout@v4

      # 2. Setup PHP for Laravel build
      - name: ‚öôÔ∏è Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, bcmath, mysql, curl, dom, gd, json, xml, zip
          coverage: none

      # 3. Install Composer dependencies
      - name: üì¶ Install Laravel Dependencies
        run: composer install --no-dev --optimize-autoloader

      # 4. Setup Node + pnpm for React build
      - name: üß± Setup Node & pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
      - name: üì¶ Install React dependencies
        run: pnpm install --no-frozen-lockfile
      - name: üß± Build React
        run: pnpm run build

      # 5. Move React build into Laravel public folder
      # - name: üìÇ Move React build to Laravel public
      #   run: |
      #     rm -rf public/*
      #     cp -r dist/* public/

      # 6. Optimize Laravel for production
      - name: ‚ö° Optimize Laravel
        run: |
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

      # 7. Deploy to hosting via SSH (rsync)
      - name: üöÄ Deploy via SSH
        uses: easingthemes/ssh-deploy@v5.1.0
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.HOST }}
          REMOTE_USER: ${{ secrets.USER }}
          TARGET: ${{ secrets.TARGET }}
          ARGS: "-rlgoDzvc --delete --exclude='.env' --exclude='storage/' --exclude='node_modules/' --exclude='vendor/'"

      # 9Ô∏è‚É£ Run post-deployment Laravel commands remotely (no sudo)
      - name: üß© Post-Deployment Optimization
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.TARGET }}

            # Install vendor dependencies on server (shared hosts don‚Äôt like vendor upload)
            composer install --no-dev --optimize-autoloader

            # Run migrations and cache everything
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan event:cache
            php artisan optimize

            # Fix file permissions (no sudo)
            find storage -type d -exec chmod 775 {} \;
            find bootstrap/cache -type d -exec chmod 775 {} \;
            find storage -type f -exec chmod 664 {} \;
            find bootstrap/cache -type f -exec chmod 664 {} \;

            echo "‚úÖ Post-deployment complete."
